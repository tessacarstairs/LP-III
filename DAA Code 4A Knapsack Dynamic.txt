Code 4A: Knapsack Dynamic

def frac(value, weight, capacity):
    n = len(value)
    dp = [[0]*(capacity+1) for _ in range(n+1)]
    
    for i in range(1,n+1):
        for w in range(1,capacity+1):
            if weight[i-1]<=w:
                dp[i][w] = max(value[i-1]+dp[i-1][w-weight[i-1]], dp[i-1][w])
            else:
                dp[i][w] = dp[i-1][w]
    
    selected = []
    c = capacity
    
    for i in range(n,0,-1):
        if dp[i][c] != dp[i-1][c]:
            selected.append(value[i-1])
            c -= weight[i-1]
    
    return dp[n][capacity], selected

value = [50,100,150,200]
weight = [8,16,32,40]
capacity = 64

dp, selected = frac(value, weight, capacity)
print('Max Value: ',dp)
print('Selected Values: ',selected)